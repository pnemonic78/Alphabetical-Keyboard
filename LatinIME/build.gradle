apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 29

    // Required if using classes in android.test.runner
    useLibrary 'android.test.runner'

    // Required if using classes in android.test.base
    useLibrary 'android.test.base'

    // Required if using classes in android.test.mock
    useLibrary 'android.test.mock'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 208
        versionName "2.08"

        applicationId 'com.github.inputmethod.alphabetical'
        testApplicationId 'com.github.inputmethod.alphabetical.tests'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = false

        signingConfig signingConfigs.debug
    }

    signingConfigs {
        debug {
            storeFile file("java/shared.keystore")

            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        release {
            storeFile file("../release.keystore")
            storePassword project.STORE_PASSWORD_RELEASE
            keyAlias "release"
            keyPassword project.KEY_PASSWORD_RELEASE
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.flags'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "default"

    sourceSets {
        main {
            manifest.srcFile 'java/AndroidManifest.xml'
            java.srcDirs = ['common/src', 'java/src']
            res.srcDirs = ['java/res']
        }

        androidTest {
            manifest.srcFile "tests/AndroidManifest.xml"
            java.srcDirs = ['tests/src']
            res.srcDirs = ['tests/res']
        }
    }

    externalNativeBuild {
        cmake {
            path 'native/jni/CMakeLists.txt'
        }
    }

    aaptOptions {
        noCompress 'dict'
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation "org.mockito:mockito-core:1.9.5"
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'

    // Logging
    implementation 'com.google.firebase:firebase-crashlytics:17.1.0'
}
